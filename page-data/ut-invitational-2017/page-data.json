{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/ut-invitational-2017","result":{"data":{"post":{"__typename":"MdxPost","slug":"/ut-invitational-2017","title":"UT Invitational 2017","date":"11.11.2017","tags":[{"name":"Science Olympiad","slug":"science-olympiad"}],"description":"Astronomy results from UT Invitational.","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"UT Invitational 2017\",\n  \"date\": \"2017-11-11T00:00:00.000Z\",\n  \"description\": \"Astronomy results from UT Invitational.\",\n  \"tags\": [\"Science Olympiad\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In hindsight, I was a little overzealous about writing a challenging Astronomy test; I ended up with an exam which was beneficial to the most competitive teams, but impenetrable for most other teams. Of course, this is not what Science Olympiad is about -- especially at the invitational level. I want to encourage new teams to pursue astronomy, not discourage them. I'm making an effort to write tests which are more accessible to newer teams, while still being challenging for more experienced teams.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/1edab5c2310c627759af17e9a688a812/AstroExam-V1.pdf\"\n  }), \"Astronomy C EXAM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/431c73d7bd3b74d3d6ab1655ded0f60b/AstroSol-V1.pdf\"\n  }), \"Astronomy C KEY\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/a8593bda67ecc66d85cf7e9c652f4259/SSExam-V1.pdf\"\n  }), \"Solar System B EXAM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/bd16e5f2988ffd6136564208782b9607/SSSol-V1.pdf\"\n  }), \"Solar System B KEY\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"In hindsight, I was a little overzealous about writing a challenging Astronomy test; I ended up with an exam which was beneficial to theâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/ut-invitational-2017","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}